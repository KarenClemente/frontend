{"version":3,"file":"angular-infinite-scroll.js.map","sources":["ng://angular-infinite-scroll/lib/defaults.ts","ng://angular-infinite-scroll/lib/infinite-scroll.ts","ng://angular-infinite-scroll/lib/infinite-scroll.component.ts","ng://angular-infinite-scroll/lib/infinite-scroll.directive.ts","ng://angular-infinite-scroll/lib/infinite-scroll.module.ts"],"sourcesContent":["export const DEFAULTS = {\r\n  STEP: 4,\r\n  POSITION: 0,\r\n  OFFSET: 100,\r\n  DELAY: 0\r\n};","import {NgForOf, NgForOfContext} from '@angular/common';\r\nimport {DoCheck, IterableDiffers, NgIterable, NgZone, OnDestroy, OnInit, TemplateRef, ViewContainerRef} from '@angular/core';\r\nimport {BehaviorSubject, interval, merge, Observable, Subject, Subscription} from 'rxjs';\r\nimport {exhaustMap, switchMap, take} from 'rxjs/operators';\r\n\r\nimport {DEFAULTS} from './defaults';\r\n\r\nexport abstract class InfiniteScroll<T> implements OnInit, DoCheck, OnDestroy {\r\n  private _subscriptionLoading: Subscription;\r\n  private _subscriptionLoadingEnd: Subscription;\r\n  private _userEnd$ = new Observable<NgIterable<T>>();\r\n\r\n  protected _subscriptionEnd: Subscription;\r\n  protected _subscriptionUpdateAfterRender: Subscription;\r\n\r\n  protected _end$ = new Subject<NgIterable<T>>();\r\n  protected _updateAfterRender$ = new Subject<any>();\r\n\r\n  protected _ngFor;\r\n\r\n  constructor(private _differs: IterableDiffers, public zone: NgZone) {\r\n    zone.runOutsideAngular(() => {\r\n      window.addEventListener('scroll', () => this._update());\r\n      window.addEventListener('resize', () => this._update());\r\n    });\r\n  }\r\n\r\n  position = DEFAULTS.POSITION;\r\n  step = DEFAULTS.STEP;\r\n  offset = DEFAULTS.OFFSET;\r\n  delay = DEFAULTS.DELAY;\r\n  loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n  ngOnInit() {\r\n    this._subscriptionLoadingEnd = merge(this._userEnd$, this._updateAfterRender$).subscribe(() => this.loading$.next(false));\r\n    this._subscriptionUpdateAfterRender =\r\n        this._updateAfterRender$.pipe(switchMap(() => interval(this.delay).pipe(take(1)))).subscribe(() => this._update());\r\n\r\n    this._update();\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this._ngFor) {\r\n      this._ngFor.ngDoCheck();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy(this._subscriptionEnd);\r\n    this.destroy(this._subscriptionLoading);\r\n    this.destroy(this._subscriptionLoadingEnd);\r\n    this.destroy(this._subscriptionUpdateAfterRender);\r\n  }\r\n\r\n  protected createNgFor(viewContainer: ViewContainerRef, template: TemplateRef<NgForOfContext<T>>) {\r\n    this._ngFor = new NgForOf<T>(viewContainer, template, this._differs);\r\n  }\r\n\r\n  protected subscribeLoading(loading: (loading: boolean) => void) {\r\n    this.destroy(this._subscriptionLoading);\r\n    this._subscriptionLoading = this.loading$.subscribe(loading);\r\n  }\r\n\r\n  protected subscribeEnd(scrollEnd: (position: number, interval: number) => Observable<NgIterable<T>>) {\r\n    this.destroy(this._subscriptionEnd);\r\n    this._userEnd$ = this._end$.pipe(exhaustMap(() => scrollEnd(this.position, this.step)));\r\n    this._subscriptionEnd = this._userEnd$.subscribe(this.newItems.bind(this), () => this.newItems.bind(this)([]));\r\n  }\r\n\r\n  private _update() {\r\n    const scrollHeight = window.innerHeight + window.scrollY;\r\n    if (scrollHeight >= document.body.offsetHeight - this.offset) {\r\n      this.zone.runOutsideAngular(() => {\r\n        this.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  private destroy(subscription: Subscription) {\r\n    if (subscription && !subscription.closed) {\r\n      subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  protected abstract update();\r\n\r\n  protected abstract newItems(newItems: NgIterable<T>);\r\n}\r\n","import {NgForOfContext} from '@angular/common';\r\nimport {AfterContentInit, Component, Input, IterableDiffers, NgIterable, NgZone, ViewChild, ViewContainerRef} from '@angular/core';\r\nimport {ContentChild, ContentChildren, Directive, QueryList, TemplateRef} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {InfiniteScroll} from './infinite-scroll';\r\n\r\n@Directive({selector: '[infiniteStatic]'})\r\nexport class InfiniteStaticMarker<T> {\r\n  public enabled = false;\r\n  constructor(public template: TemplateRef<T>) {}\r\n}\r\n\r\n@Directive({selector: '[infiniteTemplate]'})\r\nexport class InfiniteTemplateMarker<T> {\r\n  constructor(public template: TemplateRef<NgForOfContext<T>>) {}\r\n}\r\n\r\n@Component({\r\n  selector: 'infinite-scroll',\r\n  template: `\r\n    <ng-template ngFor let-item [ngForOf]=\"_itemsStatic\">\r\n      <ng-template [ngIf]=\"item.enabled\">\r\n        <ng-container *ngTemplateOutlet=\"item.template\"></ng-container>\r\n      </ng-template>\r\n    </ng-template>\r\n    <ng-template ngFor let-item [ngForOf]=\"_items\">\r\n      <ng-container *ngTemplateOutlet=\"templateMarker.template; context: {$implicit: item}\"></ng-container>\r\n    </ng-template>`\r\n})\r\nexport class InfiniteScrollComponent<T> extends InfiniteScroll<T> implements AfterContentInit {\r\n  @ContentChildren(InfiniteStaticMarker) staticMarkers: QueryList<InfiniteStaticMarker<T>>;\r\n  @ContentChild(InfiniteTemplateMarker) templateMarker: InfiniteTemplateMarker<T>;\r\n  @ViewChild('dynamic') dynamicTemplate: ViewContainerRef;\r\n\r\n  _itemsStatic: Array<InfiniteStaticMarker<T>>;\r\n  _items: Array<T>;\r\n\r\n  private _dummies = 0;\r\n  private _outOfItems = false;\r\n\r\n  constructor(differs: IterableDiffers, zone: NgZone) {\r\n    super(differs, zone);\r\n  }\r\n\r\n  @Input() position;\r\n  @Input() step;\r\n  @Input() offset;\r\n  @Input() delay;\r\n  @Input()\r\n  set loading(loading: (loading: boolean) => void) {\r\n    this.subscribeLoading(loading);\r\n  }\r\n  @Input()\r\n  set end(scrollEnd: (position: number, interval: number) => Observable<NgIterable<T>>) {\r\n    this.subscribeEnd(scrollEnd);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._itemsStatic = this.staticMarkers.toArray();\r\n    this.updateItems();\r\n    this.update();\r\n  }\r\n\r\n  protected update() {\r\n    if (!this._items) {\r\n      this._items = [];\r\n      this._dummies = 0;\r\n    }\r\n\r\n    if (this._items && (!this._items.length || this._items.every((item) => item === undefined))) {\r\n      this._items = [];\r\n      this._dummies = 0;\r\n      this.addDummies();\r\n    }\r\n\r\n    let staticLength = 0;\r\n    if (this._itemsStatic) {\r\n      staticLength = this._itemsStatic.length\r\n    }\r\n\r\n    if (this.position < staticLength) {\r\n      this.loading$.next(true);\r\n      this._updateAfterRender$.next();\r\n      this.updateItems();\r\n      this.position += this.step;\r\n    } else if (staticLength + this.position < this._items.length - this._dummies) {\r\n      this.loading$.next(true);\r\n      this._updateAfterRender$.next();\r\n      this.position += this.step;\r\n    } else if (this._subscriptionEnd) {\r\n      this.loading$.next(true);\r\n      this._end$.next();\r\n      this.addDummies();\r\n      this.position += this.step;\r\n    }\r\n  }\r\n\r\n  protected newItems(newItems: NgIterable<T>) {\r\n    while (this._dummies > 0) {\r\n      if (this._items.length) {\r\n        this._items.pop();\r\n      }\r\n      this._dummies--;\r\n    }\r\n    const newItemsArray = Array.from(newItems);\r\n    this.zone.run(() => {\r\n      this._items = this._items.concat(newItemsArray);\r\n    });\r\n    // only continue when newItems arrive\r\n    if (newItemsArray.length) {\r\n      this._updateAfterRender$.next();\r\n    } else {\r\n      this._outOfItems = true;\r\n    }\r\n  }\r\n\r\n  private updateItems() {\r\n    this.zone.run(() => {\r\n      for (const index in this._itemsStatic) {\r\n        this._itemsStatic[index].enabled = this.position > index;\r\n      }\r\n    });\r\n  }\r\n\r\n  private addDummies() {\r\n    this.zone.run(() => {\r\n      if (!this._dummies && !this._outOfItems) {\r\n        this._items = this._items.concat(Array(this.step).fill(undefined));\r\n        this._dummies += this.step;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {NgForOfContext} from '@angular/common';\r\nimport {Directive, Input, IterableDiffers, NgIterable, OnDestroy, OnInit} from '@angular/core';\r\nimport {NgZone, TemplateRef, TrackByFunction, ViewContainerRef} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {DEFAULTS} from './defaults';\r\nimport {InfiniteScroll} from './infinite-scroll';\r\n\r\n@Directive({selector: '[infiniteScroll]'})\r\nexport class InfiniteScrollDirective<T> extends InfiniteScroll<T> implements OnInit, OnDestroy {\r\n  private _items: Array<T>;\r\n  private _positionInitial = DEFAULTS.POSITION;\r\n\r\n  private _dummies = 0;\r\n  private _outOfItems = false;\r\n\r\n  constructor(viewContainer: ViewContainerRef, templateRef: TemplateRef<NgForOfContext<T>>, differs: IterableDiffers, zone: NgZone) {\r\n    super(differs, zone);\r\n    this.createNgFor(viewContainer, templateRef);\r\n  }\r\n\r\n  @Input()\r\n  set infiniteScrollOf(infiniteScrollOf: NgIterable<T>) {\r\n    if (infiniteScrollOf) {\r\n      this._items = Array.from(infiniteScrollOf);\r\n    }\r\n    this.position = this._positionInitial;\r\n    this._dummies = 0;\r\n    this.updateItems();\r\n    this.update();\r\n  }\r\n  @Input()\r\n  set infiniteScrollTrackBy(fn: TrackByFunction<T>) {\r\n    this._ngFor.ngForTrackBy = fn;\r\n  }\r\n  get infiniteScrollTrackBy(): TrackByFunction<T> {\r\n    return this._ngFor.ngForTrackBy;\r\n  }\r\n\r\n  @Input()\r\n  set infiniteScrollTemplate(value: TemplateRef<NgForOfContext<T>>) {\r\n    this._ngFor.ngForTemplate = value;\r\n  }\r\n\r\n  @Input()\r\n  set infiniteScrollPosition(position) {\r\n    if (position === undefined || position === null) {\r\n      this.position = DEFAULTS.POSITION;\r\n    } else {\r\n      this.position = position;\r\n    }\r\n    this._positionInitial = position;\r\n  }\r\n  @Input('infiniteScrollStep') step = DEFAULTS.STEP;\r\n  @Input('infiniteScrollOffset') offset = DEFAULTS.OFFSET;\r\n  @Input('infiniteScrollDelay') delay = DEFAULTS.DELAY;\r\n  @Input()\r\n  set infiniteScrollLoading(loading: (loading: boolean) => void) {\r\n    this.subscribeLoading(loading);\r\n  }\r\n  @Input()\r\n  set infiniteScrollEnd(scrollEnd: (position: number, interval: number) => Observable<NgIterable<T>>) {\r\n    this.subscribeEnd(scrollEnd);\r\n  }\r\n\r\n  protected update() {\r\n    if (!this._items) {\r\n      this._items = [];\r\n    }\r\n\r\n    if (this._items && (!this._items.length || this._items.every((item) => item === undefined))) {\r\n      this._items = [];\r\n      this.addDummies();\r\n      this.updateItems();\r\n    }\r\n\r\n    if (this.position < this._items.length - this._dummies) {\r\n      this.loading$.next(true);\r\n      this.updateItems();\r\n      this._updateAfterRender$.next();\r\n      this.position += this.step;\r\n    } else if (this._subscriptionEnd) {\r\n      this.loading$.next(true);\r\n      this._end$.next();\r\n      this.position += this.step;\r\n      this.addDummies();\r\n      this.updateItems();\r\n    }\r\n  }\r\n\r\n  protected newItems(newItems: NgIterable<T>) {\r\n    while (this._dummies > 0) {\r\n      if (this._items.length) {\r\n        this._items.pop();\r\n      }\r\n      this._dummies--;\r\n    }\r\n    const newItemsArray = Array.from(newItems);\r\n    this._items = this._items.concat(newItemsArray);\r\n    this.updateItems();\r\n    // only continue when newItems arrive\r\n    if (newItemsArray.length) {\r\n      this._updateAfterRender$.next();\r\n    } else {\r\n      this._outOfItems = true;\r\n    }\r\n  }\r\n\r\n\r\n  private updateItems() {\r\n    this.zone.run(() => {\r\n      if (this._items) {\r\n        // update ngForOf<T> directive\r\n        this._ngFor.ngForOf = this._items.slice(0, this.position);\r\n      }\r\n    });\r\n  }\r\n\r\n  private addDummies() {\r\n    if (!this._dummies && !this._outOfItems) {\r\n      this._items = this._items.concat(Array(this.step).fill(undefined));\r\n      this._dummies += this.step;\r\n    }\r\n  }\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {InfiniteScrollComponent, InfiniteStaticMarker, InfiniteTemplateMarker} from './infinite-scroll.component';\r\nimport {InfiniteScrollDirective} from './infinite-scroll.directive';\r\n\r\n@NgModule({\r\n  declarations: [InfiniteScrollDirective, InfiniteScrollComponent, InfiniteStaticMarker, InfiniteTemplateMarker],\r\n  imports: [CommonModule],\r\n  exports: [InfiniteScrollDirective, InfiniteScrollComponent, InfiniteStaticMarker, InfiniteTemplateMarker]\r\n})\r\nexport class InfiniteScrollModule {\r\n}\r\n"],"names":["tslib_1.__extends"],"mappings":"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"}
