import { NgForOfContext } from '@angular/common';
import { IterableDiffers, NgIterable, OnDestroy, OnInit } from '@angular/core';
import { NgZone, TemplateRef, TrackByFunction, ViewContainerRef } from '@angular/core';
import { Observable } from 'rxjs';
import { InfiniteScroll } from './infinite-scroll';
export declare class InfiniteScrollDirective<T> extends InfiniteScroll<T> implements OnInit, OnDestroy {
    private _items;
    private _positionInitial;
    private _dummies;
    private _outOfItems;
    constructor(viewContainer: ViewContainerRef, templateRef: TemplateRef<NgForOfContext<T>>, differs: IterableDiffers, zone: NgZone);
    infiniteScrollOf: NgIterable<T>;
    infiniteScrollTrackBy: TrackByFunction<T>;
    infiniteScrollTemplate: TemplateRef<NgForOfContext<T>>;
    infiniteScrollPosition: any;
    step: number;
    offset: number;
    delay: number;
    infiniteScrollLoading: (loading: boolean) => void;
    infiniteScrollEnd: (position: number, interval: number) => Observable<NgIterable<T>>;
    protected update(): void;
    protected newItems(newItems: NgIterable<T>): void;
    private updateItems();
    private addDummies();
}
