import { NgForOfContext } from '@angular/common';
import { AfterContentInit, IterableDiffers, NgIterable, NgZone, ViewContainerRef } from '@angular/core';
import { QueryList, TemplateRef } from '@angular/core';
import { Observable } from 'rxjs';
import { InfiniteScroll } from './infinite-scroll';
export declare class InfiniteStaticMarker<T> {
    template: TemplateRef<T>;
    enabled: boolean;
    constructor(template: TemplateRef<T>);
}
export declare class InfiniteTemplateMarker<T> {
    template: TemplateRef<NgForOfContext<T>>;
    constructor(template: TemplateRef<NgForOfContext<T>>);
}
export declare class InfiniteScrollComponent<T> extends InfiniteScroll<T> implements AfterContentInit {
    staticMarkers: QueryList<InfiniteStaticMarker<T>>;
    templateMarker: InfiniteTemplateMarker<T>;
    dynamicTemplate: ViewContainerRef;
    _itemsStatic: Array<InfiniteStaticMarker<T>>;
    _items: Array<T>;
    private _dummies;
    private _outOfItems;
    constructor(differs: IterableDiffers, zone: NgZone);
    position: any;
    step: any;
    offset: any;
    delay: any;
    loading: (loading: boolean) => void;
    end: (position: number, interval: number) => Observable<NgIterable<T>>;
    ngAfterContentInit(): void;
    protected update(): void;
    protected newItems(newItems: NgIterable<T>): void;
    private updateItems();
    private addDummies();
}
